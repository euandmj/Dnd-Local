<UserControl x:Class="DndL.Gui.Views.PaintCanvasView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:its="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:ity="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:lcvtr="clr-namespace:DndL.Gui.Core.Converters;assembly=DndL.Gui.Core"
             xmlns:controls="clr-namespace:DndL.Gui.Controls"
             xmlns:model="clr-namespace:DndL.Gui.Model"
             xmlns:views="clr-namespace:DndL.Gui.Views"
             mc:Ignorable="d" 
             VerticalAlignment="Stretch"
             HorizontalAlignment="Stretch">
    <UserControl.Resources>
        <ResourceDictionary>
            <lcvtr:BrushToColourConverter x:Key="BrushToColourConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        

        <Canvas x:Name="Canvas"           
                Grid.Row="1"
                Grid.Column="0"
                Grid.RowSpan="1"
                Visibility="Hidden"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
            <ItemsControl ItemsSource="{Binding CanvasChildren, Mode=TwoWay}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <ity:Interaction.Triggers>
                <ity:EventTrigger EventName="MouseLeftButtonDown">
                    <its:CallMethodAction TargetObject="{Binding}"
                                          MethodName="MouseDown" />
                </ity:EventTrigger>
                <ity:EventTrigger EventName="MouseMove">
                    <its:CallMethodAction TargetObject="{Binding}"
                                          MethodName="MouseMove" />
                </ity:EventTrigger>
                <ity:EventTrigger EventName="MouseLeftButtonUp">
                    <ity:InvokeCommandAction Command="{Binding MouseUpCommand}" />
                </ity:EventTrigger>
            </ity:Interaction.Triggers>

            <Canvas.Background>
                <ImageBrush ImageSource="{Binding Background}" />
            </Canvas.Background>
        </Canvas>

        <StackPanel Orientation="Horizontal"
                    VerticalAlignment="Stretch"
                    Grid.Row="0"
                    Grid.Column="0">
            
            <Button Width="auto"
                    Height="auto"
                    Content="Move"
                    Command="{Binding MoveCommand}" />
            <Button Width="auto"
                    Height="auto"
                    Content="Brush1"
                    IsEnabled="{Binding Brush1Enabled}"
                    Command="{Binding Brush1Command}" />
            <Button Width="auto"
                    Height="auto"
                    Content="Brush2"
                    IsEnabled="{Binding Brush2Enabled}"
                    Command="{Binding Brush2Command}" />
            <Button Width="auto"
                    Height="auto"
                    Content="Img"
                    Command="{Binding SwitchBackgroundCommand}" />


            <xctk:DoubleUpDown Value="{Binding ActiveBrush.Thickness, Mode=TwoWay}"
                               DefaultValue="{Binding ActiveBrush.Thickness, Mode=OneTime}"
                               Minimum="1"
                               Maximum="70"
                               Width="auto"/>            

            <xctk:ColorPicker Width="70"
                              SelectedColor="{Binding ActiveBrush.Color, Mode=TwoWay, Converter={StaticResource BrushToColourConverter}}" />
        </StackPanel>

        <!--
        <controls:SnappingGrid Grid.Column="0"
                            Grid.Row="1">
            
        </controls:SnappingGrid>
        -->
        <Grid x:Name="gridsnapper"
              ShowGridLines="True"
              IsHitTestVisible="True"
              Background="Transparent"
              VerticalAlignment="Stretch"
              HorizontalAlignment="Stretch"
              Grid.Column="0"
              Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
        </Grid>

    </Grid>
    
</UserControl>
